syntax = "proto3";

// package go.micro.srv.order;
option go_package = ".;order";

service Order {
  // 创建出行订单
  rpc CreateOrder(ReqCreateOrder) returns(RespCreateOrder) {}
  // 接受订单 / 抢单
  rpc AcceptOrder(ReqAcceptOrder) returns(RespAcceptOrder) {}
  // 订单确认上车
  rpc ConfirmGetOn(ReqConfirmGetOn) returns(RespConfirmGetOn) {}
  // 订单行程开始
  rpc StartOrder(ReqStartOrder) returns(RespStartOrder) {}
  // 订单行程取消
  rpc CancelOrder(ReqCancelOrder) returns(RespCancelOrder) {}
  // 订单行程完成
  rpc FinishOrder(ReqFinishOrder) returns(RespFinishOrder) {}
  // 查看订单行程历史
  rpc QueryOrderHis(ReqOrderHis) returns(RespOrderHis) {}
}

message order {
  int64 id = 1;
  string orderId = 2;
  string srcGeo = 3;
  string destGeo = 4;
  int64 createAt = 5;
  int64 acceptAt = 6;
  int64 getOnAt = 7;
  int64 startAt = 8;
  int64 cancelAt = 9;
  int64 finishAt = 10;
  int32 cancelRole = 11;
  double cost = 12;
  string passengerId = 13;
  string driverId = 14;
  int32 status = 15;
  string srcAddr = 16;
  string destAddr = 17;
}

message ReqCreateOrder {
  order order = 1;
  string sign = 2;
}

message RespCreateOrder {
  int32 code = 1;
  order order = 2;
  string message = 3;
}

message ReqAcceptOrder {
  order order = 1;
  string sign = 2;
}

message RespAcceptOrder {
  int32 code = 1;
  order order = 2;
  string message = 3;
}

message ReqConfirmGetOn {
  order order = 1;
  string sign = 2;
}

message RespConfirmGetOn {
  int32 code = 1;
  order order = 2;
  string message = 3;
}

message ReqStartOrder {
  order order = 1;
  string sign = 2;
}

message RespStartOrder {
  int32 code = 1;
  order order = 2;
  string message = 3;
}

message ReqCancelOrder {
  order order = 1;
  string sign = 2;
}

message RespCancelOrder {
  int32 code = 1;
  order order = 2;
  string message = 3;
}

message ReqFinishOrder {
  order order = 1;
  string sign = 2;
}

message RespFinishOrder {
  int32 code = 1;
  order order = 2;
  string message = 3;
}

message ReqOrderHis {
  string userId = 1;
  int32 role = 2;
  // 时间起止日期
  int64 fromTS = 3;
  int64 toTS = 4;
}

message RespOrderHis {
  int32 code = 1;
  repeated order orders = 2;
  string message = 3;
}